# 驱动配置信息
debug: false # Enable debug logs.
trace: false

## include other yml config.
spring.profiles:
  # Comma-separated list of active profiles. Can be overridden by a command line switch.
  active:
    - dev
#  # Unconditionally activate the specified comma-separated list of profiles (or list of profiles if using YAML).
#  include:
#    - dev
#    - release

# 服务发现配置
discovery: &discovery
  provider: etcd/consul/zookeeper
  etcd:
    endpoints:
      - 127.0.0.1:6000
      - 127.0.0.1:6001
      - 127.0.0.1:6002
  consul:
    address: 127.0.0.1:7001
  zookeeper:
    addresses:
      - 127.0.0.1:7100
      - 127.0.0.1:7101
      - 127.0.0.1:7102

# grpc server 配置
grpcs:
  # server 配置
  serverConfig: &shadedNettyServer
    maxInboundSize: 1024
  # 默认支持的两个服务，该模式可以自动使用注解

  servers:
    # 内置 primary
    - scopeName: primary
      address: 127.0.0.1:8001
      shadedNettyServerConfig:
        <<: *shadedNettyServer

    # 内置 private
    - scopeName: private
      address: 127.0.0.1:8002
      shadedNettyServerConfig:
        <<: *shadedNettyServer
      # 注册发现配置
      discovery:
        # 该值如果不设置 则 使用 默认配置
        serviceName: examplesPrivateService
        <<: *discovery

    # 自定义地址1
    - scopeName: mixed1
      url: 127.0.0.1:9001
      shadedNettyServerConfig:
        <<: *shadedNettyServer
      # 注册发现配置
      discovery:
        # 该值如果不设置 则 使用 默认配置
        serviceName: examplesMixed1Service
        <<: *discovery

grpc:
  # grpc client 配置
  client: &grpcClient
    maxInboundSize: 1024
  remote:
    # 以下配置写法会从远程 service 读取到 远程注册到 注册发现 组件的 service address
    # 该 scopeName 则是使用本地的 scopeName 对应的 拦截器等等
    - scopeName: private
      clientConfig:
        <<: *grpcClient
      # 注册发现配置
      discovery:
        # 该值如果不设置 则 使用 默认配置
        serviceName: examplesPrivateService
        <<: *discovery

    # 该 配置会使用 本地定义的 mixed1 的拦截器 等等配置
    - scopeName: mixed1
      clientConfig:
        <<: *grpcClient
      discovery:
        # local 等于 空 或者 等于 mixed1 都行，表示引用本机 进程之间的服务
        local: (空/mixed1)/127.0.0.1:9001
